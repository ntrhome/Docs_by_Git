Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-07-07T19:56:53+03:00

====== Tasks ======
Created Воскресенье 07 июля 2019

[[https://developer.android.com/guide/components/tasks-and-back-stack.html|Задача]]** - **[[https://developer.android.com/guide/components/activities/tasks-and-back-stack|Tasks]]

Задача - это системный механизм, обеспечивающий работу приложения в части порядка функционирования вызываемых им активностей.

Механизм задачи, в частности, включает:
- собственный для задачи стек возврата (the back stack);
- сохраняемые состояния активити.

Поскольку стек возврату у каждой задачи свой, вы не перейдете нажатием "назад" в другую задачу.

Для большинства задач запуск осуществляется из средства запуска приложений (окно перечня приложений) или из главного экрана. Если у приложения нет уже запущеной задачи, то для него создается новая задача, в которой открывается его "основная" активити - в качестве корневой в стеке.

В рамках задачи могут запускаться как активити самого приложения, так и активити сторонних приложений (вайбер вызывает фотоаппарат). 

В случае, если вызвана активити стороннего приложения, то эта активити, в зависимости от аргументов Intent и в зависимости от параметров активити в манифесте (см. [[https://developer.android.com/guide/components/tasks-and-back-stack.html#ManagingTasks|Управление задачами]]):
		- - может быть вызвана в текущей задаче;
		- - может быть вызвана в новой задаче;
		- - может иметь другие особенности вызова.
				(Например атрибут активити в манифесте: launchMode = "singleTop" или флаг интента: intent.sddFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP) при множественном вызове подряд (из себя же) одного и того же активити (например поиск) - не добавит в стек повторные экземпляры активити, и по единственному нажатию "назад" вернется в предыдущий поиску активити).

Т.о. задача не держит в памяти все запущенные активити (экономя память), а вместо этого хранит данные о запуске активити в стеке возврата и данные состояния активити, и т.о. всегда знает какую следующую активити нужно предоставить пользователю, и как это сделать:
1) для запуска новой активити: 
		- сохранить состояние текущей активити (если есть - т.е. запускается не новая задача), 
		- втолкнуть в стек сведения о запуске новой активити, 
		- перейти к шагу 5);
2) при нажатии "назад":
		- вытолкнуть из стека текущую активити (при этом предыдущая окажется в вершине стека),
		- перейти к шагу 5);
3) при потере задачей фокуса:
		- сохранить состояние текущей активити,
		- передать управление системе.
3) при возврате фокуса в задачу:
		- перейти к действию 5);
5) если в стеке есть активити: 
		- вызвать активити согласно данным в вершине стека,
		- отрисовать активити,
		- восстановить состояние активити (если оно не null),
		- передать фокус в активити, 
	иначе, если в стеке больше нет активити:
		- завершить задачу,
		- передать управление системе.

Активити в стеке никогда не переупорядочиваются, только добавляются в стек и удаляются из него. Т.о. если конкретная активити уже вызывалась и присутствует в стеке, и теперь вызывается вновь, то никакого обращения к её экземпляру в стеке не делается, а напротив, в стек помещается новый экземпляр этой активити.

Кстати Фрагмент обрабатывается по механизму активити.

Кстати способов запуска новой задачи не так моного:
- запуск задачи системой (возможно там несколько способов);
- клик по ярлыку приложения на главном экране или значку приложения в окне перечня приложений;
- иногда - клик по системному напоминанию / сообщению.

- - - - - - - - - - - - - 
- - - - - - - - - - - - - 

**Фоновый режим задачи (background activity):**
Задача может переходить в фоновый режим при потере фокуса (оставаясь висеть в [[https://developer.android.com/guide/components/activities/recents|Recents Screen]] - [[https://developer.android.com/guide/components/recents.html?hl=RU|Экран обзора]]-поганый перевод).
В фоновом режиме все активити у задачи остановлены, но стек возврата задачи остается неизменным. 

Задача может вернуться на передний план (foreground) с прерванного места если на нее снова переключились.

В фоновом режиме может находиться несколько задач. Однако, если набирается много фоновых задач, система может начать уничтожение фоновых активити для освобождения памяти, что приведет к потере состояния задачи. См. [[https://developer.android.com/guide/components/tasks-and-back-stack.html#ActivityState|Сохранение состояния операции]].

- - - - - - - - - - - - - 

[[https://developer.android.com/guide/components/tasks-and-back-stack.html#ActivityState|Сохранение состояния операции]]

Как указано в разделе "Фоновый режим задачи", сохраненное системой состояние может быть утеряно.
Чтобы избежать потери работы пользователя, необходимо с упреждением сохранять ее путем реализации методов обратного вызова [[https://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)|onSaveInstanceState()]] в вашей активити.



- - - - - - - - - - - - - 
https://developer.android.com/reference/android/support/constraint/packages?hl=ru
- - - - - - - - - - - - - 
= = = = = = = = = = = = = = = = = = = = = 

