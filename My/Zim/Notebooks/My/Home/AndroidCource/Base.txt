Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-25T14:34:08+03:00

====== Base ======
Created вівторок 25 червень 2019

====== Android - Основы создания приложений ======

https://developer.android.com/guide/components/fundamentals

Компоненты приложения (4):
Каждый компонент представляет собой отдельную точку входа в приложение (не пользователя а системы - например можно вызвать страницу написания почтового сообщения минуя общий интерфейс).

1. Activity - действие - операция - копонент подкласса класса Activity, один экран интерфейса;
2. Service - служба -  компонент подкласса класса Service, работает в фоновом режиме, выполняет длительную операцию, не имеет пользовательского интерфейса, запускается другим компонентом, который затем взаимодействует с ней, например может воспроизводить музыку в фоновом режиме, получать данные по сети;
3. Content provider - поставщик контента - компонент подкласса класса ContentProvider - управляет набором основных данных приложения, доступных из файловой системы, базы данных SQLite, из Интернета, др., реализует стандартный набор API-интерфейсов, посредством поставщика контента другие приложения могут запрашивать или изменять данные, например, в системе Android есть поставщик контента контактов пользователя, может быть поставщик контента заметок и пр., не имеют пользовательского интерфейса;
4. Broadcast receiver - приемник широковещательных сообщений - компонент подкласса класса BroadcastReceiver, который реагирует на объявления (как объекты Intent - "намерение"), распространяемые приложениями по всей системе или самой системой, предназначен для инициации действий по событию, например при объявлении о том, что  какие-то данные загружены, экран выключился, аккумулятор разряжен или был сделан фотоснимок, не имеют пользовательского интерфейса.

Уникальной особенностью системы Android является то, что любое приложение может (но не самостоятельно,  а сделав запрос в систему посредством выдачи намерения Intent) запустить компонент стороннего приложения (система его запускает или активирует, в зависимости от его состояния, называется - "активирует", как процесс стороннего приложения) (например компонент фотографирование приложения Камера, которое вернет приложению фотографию). Поэтому, в отличие от большинства других систем, приложение для Android не имеет единой точки входа (например, в них нет функции main()).

Активация компонентов
Компоненты трех из четырех возможных типов - Activity, Service и Broadcast receiver - активируются асинхронным сообщением, которое называется Intent (намерение). Объекты Intent связывают друг с другом отдельные компоненты во время выполнения, будь то это компоненты вашего или стороннего приложения (эти объекты Intent можно представить себе в виде мессенджеров, которые посылают другим компонентам запрос на выполнение действий).
Объект Intent описывает запрос на активацию либо конкретного компонента, либо компонента конкретного типа — соответственно, намерение Intent может быть явным или неявным. 

Для Activity и Service объект Intent определяет действие, которое требуется выполнить (например, просмотреть (view) или отправить (send) что-то), а также может указывать URI (Uniform Resource Identifier – унифицированный идентификатор ресурса) данных, с которыми это действие нужно выполнить (помимо прочих сведений, которые нужно знать запускаемому компоненту). 

Activity может просто выполнить действие (например, вывести изображение на экран), либо что-то вернуть назад (также посредством Intent) (например, чтобы дать пользователю выбрать контакт и вернуть его назад, тогда в ответном сообщении Intent будет содержаться URI, указывающий на выбранный контакт). 

Broadcast receiver просто определяет Intent передаваемого объявления (например, широковещательное сообщение о низком уровне заряда аккумулятора содержит только строку "аккумулятор разряжен").

Компоненты четвертого типа - Content provider - сообщениями Intent не активируются. Они активируются по запросу от ContentResolver. Процедура определения контента (content resolver) обрабатывает все прямые транзакции с поставщиком контента, с тем чтобы этого не пришлось делать компоненту, который выполняет транзакции с поставщиком. Вместо этого он вызывает методы для объекта ContentResolver. Это формирует слой, абстрагирующий (в целях безопасности) поставщика контента от компонента, запрашивающего информацию.

Для активации компонентов каждого типа имеются отдельные методы:
- для Activity - можно запустить действие (или определить для него какое-то новое действие), передав объект Intent методу startActivity() или startActivityForResult() (если требуется, чтобы операция вернула результат);
- для Service - можно запустить службу (либо выдать работающей службе новые инструкции), передав объект Intent методу startService(). Либо можно установить привязку к службе, передав объектIntent методу bindService().
- Broadcast receiver - можно инициировать рассылку сообщений, передав объект Intent таким методам, как sendBroadcast(), sendOrderedBroadcast() и sendStickyBroadcast().
- для Content provider - можно выполнить запрос к поставщику контента, вызвав метод query() для объекта ContentResolver.

Подробные сведения об использовании объектов Intent приведены в документе Объекты Intent и фильтры объектов Intent. Более подробная информация об активации определенных компонентов также приведена в следующих документах: Операции, Службы, BroadcastReceiver и Поставщики контента.

Файл манифеста
Для запуска компонента приложения системе Android необходимо знать, что компонент существует. Для этого она читает файл AndroidManifest.xml приложения (файл манифеста). В этом файле, который должен находиться в корневой папке приложения, должны быть объявлены все компоненты приложения.
Помимо объявления компонентов приложения, манифест служит и для других целей, среди которых:
- указание всех полномочий пользователя, которые требуются приложению, например разрешения на доступ в Интернет или на чтение контактов пользователя;
- объявление минимального уровня API, требуемого приложению, с учетом того, какие API-интерфейсы оно использует;
- объявление аппаратных и программных функций, которые нужны приложению или используются им, например камеры, службы Bluetooth или сенсорного экрана;
- указание библиотек API, с которыми необходимо связать приложение (отличные от API-интерфейсов платформы Android), например библиотеки Google Maps ;
- и многое другое.
Все компоненты приложения необходимо объявлять следующим образом:
-элементы <activity> для операций;
-элементы <service> для служб;
-элементы <receiver> для приемников широковещательных сообщений;
-элементы <provider> для поставщиков контента.

Объявление компонентов ...

Объявление возможностей компонентов ...

Объявление требований приложения ...

Ресурсы приложения ...

