Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-25T16:57:25+03:00

====== Layout ======
Created вівторок 25 червень 2019

Ресурсы разметки
Еще один из важных видов ресурсов - ресурсы разметки, которые отвечают за внешний вид приложения. Данные ресурсы представлены в формате XML. Ресурс разметки формы (layout resource) - это ключевой тип ресурсов, применяемый при программировании пользовательских интерфейсов в Android. Каждый ресурс, описывающий разметку, хранится в отдельном файле каталога res/layout. Имя файла без расширения выступает как идентификатор ресурса.
Ниже представлен фрагмент исходного кода для разметки:

setContentView(R.layout.main);
Строка setContentView(R.layout.main); указывает на то, что у нас имеется статический класс, называемый R.layout, в котором есть константа main (некое число), указывающая на View, определяемый в ХМL-файле ресурса разметки формы. ХМL-файл будет иметь имя main.xml, и он должен быть размещен в подкаталоге ресурсов res/layout и содержать необходимое определение разметки формы.
Содержимое самого файла main.xml может быть таким:

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
	android:orientation="vertical"
	android:layout_width="fill_parent"
	android:layout_height="fill_parent"
	>
<TextView  
	android:layout_width="fill_parent" 
	android:layout_height="wrap_content" 
	android:text="@string/hello"
	/>
</LinearLayout>
В данном файле разметки формы имеется корневой узел <LinearLayout>, в котором содержится дочерний элемент <TextView>.
Для каждого варианта разметки требуется специальный файл. Если вы рисуете два экрана, вам понадобится два файла разметки, например, res/layout/screenl_layout.xml и res/layout/screen2_layout.xml. Каждый файл в подкаталоге res/layout генерирует уникальную константу на основе имени файла (без расширения). При работе с ресурсами разметки здесь важно количество файлов, а при работе со строковыми ресурсами важно количество отдельных строковых ресурсов внутри файлов. Например, если в подкаталоге res/layout у нас есть два файла filel.xml и filе2.xml, то в файле R.java будут содержаться следующие записи:
public static final int file1=0x7f030000;
public static final int file2=0x7f030001;
Элементы управления, которые используются в данных файла компоновки, например, TextView, будут доступны в коде через ID, генерируемым в R.java:

TextView  tvInfo  =  this.findViewByld(R.id.textView); 
В данном примере мы находим класс TextView при помощи метода findViewByid() класса Activity. Константа R.id.textView соответствует ID, заданному в TextView. Идентификатор для TextView в файле разметки выглядит следующим образом:
 
<TextView  android:id="@+id/textView" />
Значение атрибута id указывает, что константа textView будет использоваться для идентификации этого вида среди других, используемых данным окном. Знак + в @+id/textView означает, что будет создан ID с именем textView, если он еще не существует.
