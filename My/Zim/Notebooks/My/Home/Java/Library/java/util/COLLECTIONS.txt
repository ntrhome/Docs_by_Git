Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-07-23T15:36:11+03:00

====== COLLECTIONS ======
Created вівторок 23 липень 2019

Классы коллекций располагаются в пакете **java.util**.

Хотя в Java существует множество коллекций, но они образуют стройную логичную систему. Во-первых, в основе всех коллекций лежит применение того или иного интерфейса, например:
	**Collection**: базовый интерфейс для всех коллекций и других интерфейсов коллекций;
	**Queue**: наследует интерфейс Collection и представляет функционал для структур данных в виде очереди;
	**Deque**: наследует интерфейс Queue и представляет функционал для двунаправленных очередей;
	**List**: наследует интерфейс Collection и представляет функциональность простых списков;
	**Set**: также расширяет интерфейс Collection и используется для хранения множеств уникальных объектов;
	**SortedSet**: расширяет интерфейс Set для создания сортированных коллекций;
	**NavigableSet**: расширяет интерфейс SortedSet для создания коллекций, в которых можно осуществлять поиск по соответствию;
	**Map**: предназначен для созданий структур данных в виде словаря, где каждый элемент имеет определенный ключ и значение. В отличие от других интерфейсов коллекций не наследуется от интерфейса Collection.

Эти интерфейсы частично реализуются абстрактными классами:
	**AbstractCollection**: базовый абстрактный класс для других коллекций, который применяет интерфейс Collection;
	**AbstractList**: расширяет класс AbstractCollection и применяет интерфейс List, предназначен для создания коллекций в виде списков;
	**AbstractSet**: расширяет класс AbstractCollection и применяет интерфейс Set для создания коллекций в виде множеств;
	**AbstractQueue**: расширяет класс AbstractCollection и применяет интерфейс Queue, предназначен для создания коллекций в виде очередей и стеков;
	**AbstractSequentialList**: также расширяет класс AbstractList и реализует интерфейс List. Используется для создания связанных списков;
	**AbstractMap**: применяет интерфейс Map, предназначен для создания наборов по типу словаря с объектами в виде пары "ключ-значение".

С помощью применения вышеописанных интерфейсов и абстрактных классов в Java реализуется широкая палитра классов коллекций - списки, множества, очереди, отображения и другие, например:
	**ArrayList**: простой список объектов
	**LinkedList**: представляет связанный список
	**ArrayDeque**: класс двунаправленной очереди, в которой мы можем произвести вставку и удаление как в начале коллекции, так и в ее конце
	**HashSet**: набор объектов или хеш-множество, где каждый элемент имеет ключ - уникальный хеш-код
	**TreeSet**: набор отсортированных объектов в виде дерева
	**LinkedHashSet**: связанное хеш-множество
	**PriorityQueue**: очередь приоритетов
	**HashMap**: структура данных в виде словаря, в котором каждый объект имеет уникальный ключ и некоторое значение
	**TreeMap**: структура данных в виде дерева, где каждый элемент имеет уникальный ключ и некоторое значение
	
	Vector, Stack - устаревшие.


Схематично всю систему коллекций вкратце можно представить следующим образом:
	{{.\collections.png}}

