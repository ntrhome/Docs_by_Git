Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-07-17T02:12:09+03:00

====== package ======
Created Wednesday 17 July 2019

Пакеты являются контейнерами классов.

Они служат одновременно :
- механизмом разделения пространств имен классов (т.о. одноименные классы могут мирно сосуществовать в разных пакетах), и
- механизмом управления доступом к классам:
		В пакете можно определить классы, недоступные для кода за переделами этого
		пакета. В нем также можно определить члены класса, доступные только другим членам этого же пакета. Благодаря такому механизму классы могут располагать полными сведениями друг о друге, но не предоставлять эти сведения остальному миру.

- - - - - - - - - - - - 

**Определение (создание) пакета:**

Если оператор package отсутствует, то имена классов размещаются в пакете, используемом по умолча­нию и не имеющем имени. Но пакет по умолчанию не годится для реальных приложений со значительным числом классов.

Если пакет в файле объявлен (обязательно в 1-й строке исходного кода), то все классы, объявленные в файле, будут принадлежать этому пакету:
		package my.package;

Пакеты представляют собой дерево каталогов фаловой системы (a/b/c). Путь к каталогу,  написанный через точку, является в точности именем пакета (a.b.c) (ре­гистр букв важен). И именно по соответствующему имени пакета пути должен располагаться файл-байткод .class или .jar этого исходного кода. 

Имена пакетов (каталогов) следует выбирать тщательно - любое изменение чревато отслеживанием соответствия всех элементов.

Один пакет содержит любое число разноименных классов.

Где джавка ищет пакеты? (4) -
	1) в текущем рабочем каталоге (а если указан import, то по соответствующему пути пакета от текущего рабочего каталога);
			Например, наш проект размещен в папке /home/my/prj, тогда джавка ищет классы там же.
			А если в проекте есть import output.org.MyClass или import output.org.*, то по пути /home/my/prj/output/org/ (соответственно, там должен наличиствовать MyClass.java, который должен содержать package output.org; и public class MyClass{...}).
	2) по соответствующему пути относительно путей, указанных в переменной окружения CLASSPATH (export CLASSPATH=/home/my/prj/lib/CoolFramework.jar:/home/my/prj/.
	3) командам java и javac можно указывать параметр -classpath с путями (аналогично CLASSPATH) или системной опцией java.class.path __(?)__.
	4) __с JDK 9 - пакет может быть составной частью модуля, и быть найден по пути к модулю (глава 16).__
	


















