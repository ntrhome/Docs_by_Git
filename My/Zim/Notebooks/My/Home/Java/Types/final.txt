Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-28T00:09:19+03:00

====== final ======
Created Пятница 28 июня 2019

**Как final (конечный) может быть объявлена (3):**
	- ** любая переменная, которая теперь становится именованной константной:**
			- - динамическое (обычное) поле класса допустимо инициализировать либо во время объ­явления, либо в конструкторе;
			- - статическое поле (static) класса допустимо инициализировать либо во время объявления, либо в static-блоке (см. [[Classes:static]]);
			- - локальная переменная метода - препятствует присвоению ей значения в коде больше одного раза; 
			- - аргумент метода - препятствует его изме­нению в пределах метода.
	- **метод (в понятии наследования)** - запрещает переопределение метода;
					final void f() {...}
			В частности, применение таких методов может способствовать увеличению производительности программы. Оптимизатор компилятора вправе встраивать эти методы (их вызов - раннее связывание, или их тело), поскольку ему известно, что они не будут переопределены в подклассе (далее не будет применяться динамическая диспетчеризация).
	- **класс (в понятии наследования) - **запрещает наследование класса**.**
					final class А {...}
			Объявление класса конеч­ным неявно делает конечными и все его методы (по теме оптимизатора - см. выше). Нетрудно догадаться, что одно­временное объявление класса как abstract и как final недопустимо.

Часто final-членам дают имена ПРОПИСНЫМИ БУКВАМИ.

= = = = = = = = = = = = = = = = = = = = = 

- - - - - - - - - - - - - 

- - - - - - - - - - - - - 

= = = = = = = = = = = = = = = = = = = = = 

