Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-26T17:51:30+03:00

====== Access ======
Created Среда 26 июня 2019

Аспекты управления доступом в джавке реализованы:
	- непосредственно на уровне класса, 
	- механизьмом наследования классов,
	- модули (с JDK 9 - в главе 16),
	- и на уровне группировки классов по пакетам (в главе 9).

= = = = = = = = = = = = = = = = = = = = = 

**Тут рассмотрим 1й аспект - на уровне класса:**

- - - - - - - - - - - - - 

**Доступ на уровне класса - реализован модификаторами доступа:**
	- **рublic** (откры­тый) - свободно доступен в и во вне класса,
	- **protected** (защищенный) - применяет­ся при наследовании - см. [[Classes:extends]],
	- **private** (закрытый) - доступен только внутри этого же класса.
	- также имеется понятие уровня доступа, предоставляемого **по-умолчанию**: по умолчанию член класса считается открытым в своем пакете, но недоступным для кода, находящегося за пределами этого пакета (__разобраться! он отличается от 3-х выше__).
	- а также специфический доступ **к методу main** из вне среды ВМ Java.

- - - - - - - - - - - - - 

Если объект оперирует объектом **того же класса**, то он имеет неограниченный доступ ко всем его членам (включая private).
		class A{
				private int p=0;
				public void f(A objA){ //объект того же класса
						objA.p++; //неограниченный доступ
				}
		A a = new A(), b = new A();
		b.f(a); //и еще: ссылка "a" это и есть ссылка "this" объекта "a" 

- - - - - - - - - - - - - 
