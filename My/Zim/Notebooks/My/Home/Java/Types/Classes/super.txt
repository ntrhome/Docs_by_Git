Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-29T02:42:39+03:00

====== super ======
Created Суббота 29 июня 2019

**super** служит доступу из субкласса к членам суперкласса.
см. наследование - [[Classes:extends]]


**super всегда отностся к суперклассу-родителю текущего субкласса, и имеет две общие формы:**
	1) **спецметод super()** служит вызову конструктора суперкласса (с учнтом перегрузки):
				**suреr(список_аргументов);**
	и если такой вызов делается, то он непременно должен располагаться первым среди команд конструктора субкласса;

	
	2) **ссылка super** соответствует ссылке this текущего объекта, но только к членам его суперкласса. Применяется, например, для доступа в объекте к членам суперкласса, перекрытым членами субкласса:
				**suреr.поле**
				**super.метод()**

- - - - - - - - - - - - - **Примеры:**
**1) вызов конструктора суперкласса спецметодом super:** конструктор суперкласса инициализирует свои переменные:
		class Box{ //суперкласс
				private double width=0, height=0, depth=0;
				Box(double w, double h, double d){width=w; height=h; depth=d;}
				Box(Box o){width=o.width; height=o.height; depth=o.depth;}
		}
1й конструктор - простой инициализации переменных,
2й конструктор - клонирование объекта
Субклас добавляет значение weight и задействует для инициализации конструкторы суперкласа:
		class SubBox{ //субкласс
				private double weight=0;
				SubBox(double w, double h, double d, double m){ 
						**super(w,h,d); //тут просто - спецметодом вызвали соответствующий конструктор**
						weight = m; 
				}
				SubBox(SubBox o){
						**super(o); //а тут - интересно...**
						weight = o.weight; }
		}
Второй конструктор передает в суперкласс именно ссылку на объект субкласса, но тот корректно отлавливает с помощье нее известные ему поля - см. наследование - [[Classes:extends]]. А именно: переменной-ссылке на суперкласс можно присваивать ссылку на его субкласс, но доступ через эту ссылку к членам субкласса будет ограничен только членами, известными суперклассу.
Таким образом, мы использовали в субклассе возможности, уже заложенные в суперклассе, дополнив их кодом обработки новых возможностей, привнесенных именно субклассом.

2) **ссылка super** - рассмотрим использование в случае перекрытия:
		class Super {int i;}
		class Sub extends Super {
				int i;
				Sub(int a, b){ super.i = a; i = b; 
		}
		Несмотря на то что переменная i из класса Sub перекрыла переменную i из суперкласса Super, ссылка super позволяет получить доступ к сокрытой переменной. Аналогично можно вызвать и перекрытый метод.

- - - - - - - - - - - - - 

= = = = = = = = = = = = = = = = = = = = = 

