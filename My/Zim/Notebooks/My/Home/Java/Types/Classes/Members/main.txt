Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-28T16:07:11+03:00

====== main ======
Created Пятница 28 июня 2019

class A
{
	public static void main(String[] args)	//String args[]
	{
	}
}

Арrументы командной строки, разделенные пробелом, хранятся в виде символьных строк в массиве типа String, передавае­мом методу mаin(). Первый - в элементе args[0] и т.д.
- - - - - - - - - - - - - 
Лажа со звездочкой в командной строке.
- - - - - - - - - - - - - 
"java Topclass < input.txt" - формирует буфер пользовательского ввода.
https://stackoverflow.com/questions/196824/java-file-input-as-command-line-argument
//Inputing a file via "< input.txt" inputs it as user input rather than as a command line argument.// 
- - - - - - - - - - - - - 
**Полезный пример (**[[https://www.youtube.com/watch?v=VU5-OawZQCY|консольный ввод, перенаправление из файла]]**):**
		import java.util.Scanner;
		import java.io.FileInputStream;
		import java.io.IOException;
		
		public class Main {
			public static void main(String[] args) throws IOException {
				System.setIn(new FileInputStream("__FileFromRootOfCurrentProject__.txt"));
				var scanner = new Scanner(System.in);
				
				System.out.println("Enter word:");
				String s = scanner.next();
				System.out.println("word is:");
				System.out.println(s);
				
				scanner.close();
			}
		}
		
		

	~~через буфер - классно, но чуть сырое - легко имсправить:~~
		~~import java.io.BufferedReader;~~
		~~import java.io.IOException;~~
		~~import java.io.InputStreamReader;~~
				~~class Main{~~
			~~System.setIn(new FileInputStream("FileFromRootOfCurrentProject.txt"));~~
					~~public static BufferedReader in;~~
						~~punlic static void main(String [] args) throws IOException{~~
				~~in = new BufferedReader(new InputStreamReader(System.in));~~
				~~String [] headers = in.readLine().split(",");~~
				~~in.readLine();~~
				~~for(String e: headers){~~
					~~int i = Integer.parseInt(e);~~
				~~}  ~~
			~~}~~
		~~}~~

- - - - - - - - - - - - - 

= = = = = = = = = = = = = = = = = = = = = 

