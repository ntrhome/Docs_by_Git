Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-07-10T12:14:13+03:00

====== Override ======
Created середа 10 липень 2019

**Пререопределение, сокрытие.**

Если в иерархии наследования у суперкласса и у любого уровня субкласса члены совпадают (их сигнатуры), то говорят, что член субкласса переопределил (сокрыл) член суперкласса. 

(Если совпадает только имя метода, то метод перегружается - см. [[Members:Overload]]).

Переопределение применяется для специализации класса.

Аннотация @Override сообщает компилятору, что определение последующего за ней члена переопределит соответствующий член суперкласса, причем обязательно (теперь компилятор будет это отслеживать).

- - - - - - - - - - - - - 

**Динамическая диспетчеризация методов (позднее связывание):**
- механизм, с помощью которого вызов переопределенного метода разрешается во время выполнения, а не компиляции (объекты создаются во время выполнения, следовательно требуется динамическая диспетчеризация методов) - динамический полиморфизм.

- - - - - - - - - - - - - 

**Ссылке типа суперкласс можно присвоить объект типа субкласс любого уровня в иерархии, при этом для такой ссылки: ... **доступны члены в той версии переопределения, которая актуальна для типа объекта (т.к. объект создавался с учетом переопределений) **- доступнную версию членов определяет тип объекта.** (см. [[Classes:extends]] - Восходящие ссылки).

- - - - - - - - - - - - - **super.член**

Доступ к сокрытой версии члена можно получить через ссылку super.член (см. [[Classes:super]]).

Через super.член можно организовать **каскадный доступ** к любой версии перегружаемого члена в иерархии наследования. Например, делая в каждом классе иерархии такие переопределяемые члены:
		String clazz = "имя_текущего_класса";
		void ff(String имя_класса_где_нужная_версия_кода) { 
				if(this.clazz.equals(clazz))
						System.out.println("выполняется нужная версия кода");
				else{
						super.ff(clazz); //ищем нужное в суперклассе (в самом суперовом - здесь заглушка - "не нашли нужный класс")
				}
		}
- - - - - - - - - - - - - 



= = = = = = = = = = = = = = = = = = = = = 
