Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-10T20:48:31+03:00

====== Project ======
Created Понедельник 10 июня 2019

**О джавкиных проектах: принципы расположения на диске, компиляция и пр.**

В Java весь код должен размещаться в классах.

Единица компиляции - исходный файл (.java), содержащий определения одного или нескольких классов.

Класс, который содержит функцию main - является главным в файле классом.

Имя исходного файла идентично имени главного, определенного в нем класса.

__public-класс (доступный для других пакетов?) - должен размещаться в отдельном (собственном?) файле.__

__В то же время, не-public-классы, могут быть объявлены в файле с главным классом, но при компиляции будут разнесены в разные файлы байткода (.class), названные по именам этих классов.__

__Компилятор Java автоматически размещает каждый класс в отдельном файле с расширением class.__

__Загрузчик java получив Name запускаемого главного класса, будет искать его в файле с именем "Name.class".__

= = = = = = = = = = = = = = ПАПКИ: https://habr.com/ru/post/125210/
**Рекомендации:**
- - - - - - - - - -
**Для проекта из одного файла: КОРЕНЬ**
	- проект создавать в отдельной корневой папке.
	- компилировать в ней же:
		javac HelloWorld.java
		java -classpath . HelloWorld
- - - - - - - - - -	
Для проекта из пары-тройки файлов: КОРЕНЬ /src /bin
	- проект создавать в отдельной корневой папке, в которой еще и создать подпапки src и bin, и настроить средства компиляции и пр. так, чтоб весь выход складывали в bin.
	- компилировать и запускать лучше из корня:
		javac -d bin src/HelloWorld.java
		java -classpath ./bin HelloWorld
- - - - - - - - - -			
Для крупного проекта:
	- используем пакеты (это, в т.ч., позволит добавить данную программу в другой проект без конфликта имен).
	Имена пакетов в нижнем регистре, лучше без спецсимволов.
	Пакет, в который вошел модуль, указывается в его начале:
		package com.my.helloworld; //задом наперед
	Соответственно, в подпапке src создаем еще подпапки:
		src/com/my/helloworld/ и туда кладем исходники HelloWorld.java. 
	Компилируем:
		javac -d bin src/com/my/helloworld/HelloWorld.java
	В каталоге bin автоматически создастся структура каталогов как и в src:
		bin/com/my/helloworld/HelloWorld.class
	Запускаем:
		java -classpath ./bin com.my.helloworld.HelloWorld
	Для нескольких исходных файлов:
		/HelloWorld.java 
				package com.qwertovsky.helloworld; 
				...
		/Calculator.java 
				package com.qwertovsky.helloworld;
				import com.qwertovsky.helloworld.operation.Adder;
		/operation/Adder.java
				package com.qwertovsky.helloworld.operation;
		Компилируем указав путь к соисходникам до начала пакетных путей (т.е. ./src, а дальше - по пакету) с помощью -sourcepath:
				javac -sourcepath ./src -d bin src/com/my/helloworld/HelloWorld.java
		Запускаем как уже показывали:
				java -classpath ./bin com.my.helloworld.HelloWorld


- - - - - - - - - -
- - - - - - - - - -
- - - - - - - - - -












