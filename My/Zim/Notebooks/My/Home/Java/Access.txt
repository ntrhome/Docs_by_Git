Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-26T17:51:30+03:00

====== Access ======
Created Среда 26 июня 2019

**Аспекты управления доступом в джавке реализованы:**
	**- 1) на уровне класса (модификаторами к членам), **
	**- 2) механизмом наследования классов (модификаторами к классам),**
	**- 3) модули (с JDK 9 - глава 16),**
	**- 4) на уровне пакетов (глава 9).**

= = = = = = = = = = = = = = = = = = = = = 1**)**
**Доступ на уровне класса - реализован применением модификатора доступа к члену:**

| Class-member modificator:                   | public | protected | no modifier | private |
|:--------------------------------------------|:------:|:---------:|:-----------:|:-------:|
| Access in same class                        |  YES   |    YES    |     YES     |   YES   |
| Access in his subclass - same package       |  YES   |    YES    |     YES     |   NO    |
| Access in other class - same package        |  YES   |    YES    |     YES     |   NO    |
| Access in his subclass - different package  |  YES   |    YES    |     NO      |   NO    |
| Access in other classes - different package |  YES   |    NO     |     NO      |   NO    |

На первый взгляд - сложно. Упрощаем:
1) исключаем два простейших:
	- член с модификатором public доступен везде без ограничений;
	- член с модификатором private доступен только внутри класса;
2) остались два, к которым чуть надо привыкнуть:
	- член no_modifier ("по умолчанию") доступен везде в своем пакете;
	- член с модификатором protected доступен везде в своем пакете, а также наследникам в других пакетах.
	
= = = = = = = = = = = = = = = = = = = = = **2)**
**Механизм наследования классов (модификаторы к классам):**
Класс, **не являющийся вложенным**, может иметь только один из двух уровней доступа: 
	1) по умолчанию (no_modifier) доступен везде в своем пакете;
	2) открытый (public) - доступен везде без ограничений. 
			Если класс открытый, он должен быть един­ственным открытым классом, объявленным в файле, а имя этого файла должно совпадать с именем класса.





= = = = = = = = = = = = = = = = = = = = = **4)**
**На уровне пакетов (глава 9):**

__Характер взаимодействия пакетов и классов в Java определяет четыре категории доступности членов классов:__
	__- Подклассы из одного пакета.__
	__- Классы из одного пакета, не являющиеся подклассами.__
	__- Подклассы из разных пакетов.__
	__- Классы, не относящиеся к одному пакету и не являющиеся подклассами.__

= = = = = = = = = = = = = = = = = = = = = 

Также есть специфический доступ **к методу main** из вне среды ВМ Java.

= = = = = = = = = = = = = = = = = = = = = 
- - - - - - - - - - - - - 

__Не стирай - вникни:__
**Если объект оперирует ДРУГИМ объектом того же класса**, то он имеет неограниченный доступ ко всем его членам (включая private).
		class A{
				private int p=0;
				public void f(A objA){ //объект того же класса
						objA.p++; //неограниченный доступ
				}
		A a = new A(), b = new A();
		b.f(a); //и еще Му: ссылка "a" это и есть ссылка "this" объекта "a" 

- - - - - - - - - - - - - 
