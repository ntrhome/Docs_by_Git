Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-29T01:44:15+03:00

====== extends ======
Created Суббота 29 июня 2019

**Наследование (inheritance), extends**

В терминологии джавки:
- суперкласс (superclass) - родительский, наследуемый класс, предок;
- субкласс (subclass) - наследующий, производный, потомок.

Субкласс наследует все члены суперкласса, добавляя к ним собственные.

Т.о. субкласс - специализированный суперкласс.

Субкласс - класс, может выступить суперклассом для другого субкласса.

Для создаваемого субкласса можно указать только один суперкласс.
(Чего нельзя в джавке, так это построить субкласс на базе сразу нескольких суперклассов - нельзя "множественное наследование".)

- - - - - - - - - - - - - 

class Superclass 		  { int i=1, j=2;  }//если не private
class Subclass **extends** Superclass { int k = i + j; }//то простой доступ

- - - - - - - - - - - - - 

**Доступ:**
__Субкласс имеет такой доступ к членам суперкласса с модификатором:__
__- public 	- свободный (у наследника останется public);__
__- protected 	- свободный (у наследника станет private);__
__- private	- нет доступа. __
								__Член класса, объявленый приватным, недоступен для любого кода вне своего класса, в том числе и для субклассов.__

- - - - - - - - - - - - - 

**Порядок вызова конструкторов в наследственных классах:**
Две вещи:
		- при конструировании объекта сначала вызываются конструкторы суперклассов (**СВЕРХУ ВНИЗ** по иерархии) а затем конструктор текущего субкласса, завершая формирование объекта;
		- конструктор каждого класса в иерархии вызывается **ВСЕГДА** - неявно (дефаултный или если есть ручной без параметров) или явно ручной (без или с параметрами) через super.



- - - - - - - - - - - - - 

- - - - - - - - - - - - - 


