Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-29T01:05:07+03:00

====== Varargs ======
Created Суббота 29 июня 2019


... - **varargs (variable-length arguments) - аргументы переменной длины**
**Это** - есть с JDK 5 (без **этого** можно наделать перегружаемых методов под разное число аргументов, можно передать методу массив с однотипными аргументами, но сё не красивые подходы).

void f(int ... v) - может вызываться без аргументов или с несколькими аргументами. На самом деле конструкцию "int ... v" джавка неявно обрабатывает как "int v[]". 
Соответственно, доступ к аргументам осуществляется по синтакси­су массива:
	- v[i] - элемент,
	- v.length - количество элементов,
	- for(var e:v) - просмотр элементов.

Вараргс в параметрах может быть только один и должен стоять в конце.

**Overload:**
Метод с аргументами переменной длины МОЖНО перегружать (в т.ч. методами без варарга): должна быть достаточная разница:
	 - либо в типе варарга 
			(но тут возможна __неоднозначность__ если аргументов вообще не задали, тогда кого вызывать? - тут компилятор бут ругаться),
	- либо в типе-числе предваряющих варарг параметров, 
	- либо не предваряющих (т.е. без варарга) 
			(тут возможна еще одна __неоднозначность__ в следующем случае:
			void f(int i){}; 
			void f(int i, int ... j){};
			f(999); // __неоднозначность__ - кого вызывать?)
В т.ч. можно перегружать метод с одним аргументом и метод с варарг аргументом того же типа (f(int v) и f(int ... v)) - если передается единичный аргумент, то сработает f(int v), а если 2 и больше арумента, то f(int ... v).

Показанные выше две неоднозначности, это конечно проблемы, но чаще всего они говорят о поганом коде - чего-то не додумано.

- - - - - - - - - - - - - 

= = = = = = = = = = = = = = = = = = = = = 

